{"version":3,"sources":["components/Header.js","components/HeroCard.js","components/HeroSelection.js","components/RecruitDetails.js","components/RecruitList.js","components/Home.js","components/TeamMemberList.js","components/Team.js","components/SignIn.js","components/SignUp.js","components/NewHeroForm.js","components/TeamDetails.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","isLoggedIn","setLogIn","className","to","id","href","onClick","HeroCard","hero","xsNum","smNum","seletedMemberCard","disselectBtnId","onDisselectBtnClick","heroImage","link","heroId","hoverEffectDisabledId","Grid","item","xs","sm","src","name","useStyles","makeStyles","theme","root","flexGrow","HeroSelection","heroSelectionArray","onAddToTeamBtnClick","onDisselectBtnClickInSelection","classes","history","useHistory","container","spacing","map","thumbnail","path","extension","linke","push","RecruitDetails","onHeroSelection","useState","setHero","isLoaded","setIsLoaded","useParams","useEffect","fetch","then","r","json","data","results","goBack","enlistClickHandler","description","RecruitList","heroArray","Home","length","TeamMemberList","onDisselectBtnClickInTeamPage","image","Team","currentTeam","console","log","teamArray","setTeamArray","res","filter","teamMember","userId","catch","error","disselectedHero","method","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","typography","padding","color","SignIn","onExistingTeamLogIn","enteredTeam","setEnteredTeam","React","anchorEl","setAnchorEl","open","Boolean","undefined","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","onSubmit","e","preventDefault","addedTeam","teamName","response","users","allUsers","team","currentUser","includes","target","verifyTeam","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","value","Button","type","Link","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","SignUp","onNewTeamSubmit","newTeam","setNewTeam","setAllUsers","user","headers","body","JSON","stringify","justify","NewHeroForm","TeamDetails","App","setHeroArray","setHeroSelectionArray","setCurrentTeam","flag","selectedHero","heroArrayAfterSelect","handleLogIn","signedInTeam","heroData","heroes","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f75975a4.chunk.js","sourcesContent":["import React from \"react\";\n\n// react-router-dom Imports\nimport { Link, NavLink } from 'react-router-dom';\n\nfunction Header({ isLoggedIn, setLogIn }) {\n\n  const handleLogOut = () => {\n    setLogIn(!isLoggedIn)\n  }\n\n\n  return (\n   <nav className=\"header-container\">\n\n      <div className=\"header-left\">\n\n          <NavLink to=\"/\" id=\"header-logo\">\n            <a href=\"#\">SUPERTEAM</a> \n          </NavLink>\n\n        <div className=\"navbar-container\">\n          <NavLink to=\"/\">\n            <a href=\"#\"  className=\"navlinks\">Home</a> \n          </NavLink>\n          <NavLink to=\"/team\" >\n          <a href=\"#\" className=\"navlinks\">Your Team</a> \n          </NavLink>\n          <NavLink to=\"/addhero\" >\n          <a href=\"#\" className=\"navlinks\">Add a Hero</a> \n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"header-right\">\n        {isLoggedIn ? <button onClick={handleLogOut}>Sign Out</button> \n        :\n        <Link to=\"/signin\" className=\"navbar-btn\">\n        <button>Sign in</button>\n        </Link>\n        }\n      </div>\n\n   </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\n// react-router-dom Imports\nimport { Link } from 'react-router-dom';\n\n//import css from material ui\nimport Grid from '@material-ui/core/Grid';\n\nfunction HeroCard( {hero, xsNum, smNum, seletedMemberCard, disselectBtnId, onDisselectBtnClick, heroImage, heroId,link, hoverEffectDisabledId} ) {\n\n  //handle the disselectBtn\n  const handleDisselectBtn = () => {\n    //callback fn that declare on App\n    onDisselectBtnClick(hero)\n  }\n  \n  // const heroImage = hero.thumbnail.path + \".\" + hero.thumbnail.extension\n\n  return (\n \n      <Grid item xs={xsNum} sm={smNum} >\n        <Link to={link} id={hoverEffectDisabledId}> \n          <div className=\"flex-card\" id={seletedMemberCard}>\n              <img className=\"img-in-card\" src={heroImage} />\n              <div className=\"hero-info-container\">\n                <h3 className=\"hero-name\">{hero.name}</h3>\n                {/* <h4 className=\"hero-location\">Hero Id: {heroId}</h4>              */}\n              </div>\n          </div>\n        </Link>\n        <button className=\"del-btn\" id={disselectBtnId} onClick={()=>{handleDisselectBtn()}}> Deselect</button>\n      </Grid>\n  );\n}\n\nexport default HeroCard;\n","import React from \"react\";\nimport HeroCard from \"./HeroCard\";\nimport { useHistory } from \"react-router-dom\"\n\n//import things for css\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction HeroSelection({ heroSelectionArray, onAddToTeamBtnClick, onDisselectBtnClickInSelection }) {\n  //material ui thing\n  const classes = useStyles();\n\n  //props to pass down for css purpose\n  const xsNum = 6;\n  const smNum = 3;\n  const seletedMemberCard = \"seletedMemberCard\";\n\n  //useHistory for the AddToTeamBtn\n  const history = useHistory();\n\n  //Add To Team Btn handler\n  const handleAddToTeamBtn = () => {\n    //push to team page\n    history.push(\"/team\")\n    //pass heroSelectionArray up the App.js for 1.POST to the database 2.filter out the heroArray when load \n    onAddToTeamBtnClick(heroSelectionArray)\n  }\n\n\n    return (\n      \n   \n        <div className=\"flex-container\">\n            <div className={classes.root}>\n              <Grid container spacing={3}>\n                {heroSelectionArray.map(hero => <HeroCard \n                                                    key={hero.id} \n                                                    hero={hero} \n                                                    heroImage={hero.thumbnail.path + \".\" + hero.thumbnail.extension}\n                                                    heroId={hero.id}\n                                                    // link={`/recruit/${hero.id}`}\n                                                    linke={\"\"}\n                                                    hoverEffectDisabledId={\"hoverEffectDisabledId\"}\n                                                    xsNum={xsNum}\n                                                    smNum={smNum}\n                                                    seletedMemberCard={seletedMemberCard}\n                                                    onDisselectBtnClick={onDisselectBtnClickInSelection}\n                                                    />)}\n              </Grid>\n            </div>    \n            <button className=\"add-to-team-btn\" onClick={()=>{handleAddToTeamBtn()}}>Add To Your Team</button>\n        </div>\n  );\n}\n\nexport default HeroSelection;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from 'react-router-dom'\n\nfunction RecruitDetails({ onHeroSelection }) {\n    const [hero, setHero] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    const { id } = useParams()\n\n    const history = useHistory();\n    \n    function handleBack() {\n        history.goBack()\n    }\n\n    useEffect(() => {\n      fetch(`https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=c8d257c5c8de3331d6de741ea71c6a3a`)\n        .then((r) => r.json())\n        .then((hero) => {\n          setHero(hero.data.results[0]);\n          setIsLoaded(true);\n        });\n    }, [id]);\n\n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    const enlistClickHandler = (hero) => {\n      //add hero to the heroSelectionArray & make this herocard disappear from RecruitList\n      //callback fn defined on App.js\n      onHeroSelection(hero)\n      //push the page back to the home page \n      history.push('/')\n    }\n\n    const heroImage = hero.thumbnail.path + \".\" + hero.thumbnail.extension\n\n\n  return (\n    <div className=\"recruitDetailsContainer\">\n      \n      <div className=\"detail-left-container\">\n        <img className=\"detail-img\" src={heroImage}/>\n       \n        <div className=\"btngroup\">\n          <button className=\"detail-btn\" onClick={handleBack}> Go Back</button>\n          <button className=\"detail-btn\" onClick={()=>{enlistClickHandler(hero)}}> Enlist</button>\n        </div>\n      </div>\n\n      <div className=\"detail-right-container\">\n        <h2 className=\"detail-name\"> {hero.name}</h2>\n        <h3 className=\"detail-description\">Description:</h3>\n        { hero.description ===\"\" ?\n        <p> Sorry, it doesn't seem like Marvel cares about this super hero enough to give him/her a description 😔 </p>\n        :\n        <p> {hero.description}</p>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default RecruitDetails;","import React from \"react\";\nimport HeroCard from \"./HeroCard\"\nimport RecruitDetails from \"./RecruitDetails\"\n//import things for css\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction RecruitList({ heroArray, onHeroSelection}) {\n  const classes = useStyles();\n\n  //props to pass down for css purpose\n  const xsNum = 6;\n  const smNum = 2;\n  \n  //props that pass that to hide the button\n  const disselectBtnId = \"disselectBtnId\"\n\n\n  return (\n    <div className=\"flex-container\">\n      \n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            {heroArray.map(hero => <HeroCard \n                                              key={hero.id} \n                                              hero={hero} \n                                              heroId={hero.id}\n                                              onHeroSelection={onHeroSelection}\n                                              xsNum={xsNum}\n                                              smNum={smNum}\n                                              disselectBtnId={disselectBtnId}\n                                              heroImage={hero.thumbnail.path + \".\" + hero.thumbnail.extension}\n                                              link={`/recruit/${hero.id}`}\n                                              />)}\n          </Grid>\n        </div>\n      \n    </div>\n  );\n}\n\nexport default RecruitList;","import React from \"react\";\nimport HeroSelection from \"./HeroSelection\"\nimport RecruitList from \"./RecruitList\"\n\n\nfunction Home({ heroArray, heroSelectionArray, onAddToTeamBtnClick, onDisselectBtnClickInSelection }) {\n\n\n  return (\n    <div className=\"HomeContainer\">\n      {\n        heroSelectionArray.length === 0 ?\n        <h2 className=\"home-h2\">Please start selecting your heroes to your team</h2>\n        :\n        \n      \n\n        <HeroSelection heroSelectionArray={heroSelectionArray}\n                       onAddToTeamBtnClick={onAddToTeamBtnClick}\n                       onDisselectBtnClickInSelection={onDisselectBtnClickInSelection}\n                      \n                        />\n      }\n        <RecruitList heroArray={heroArray} />\n\n\n    </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\nimport HeroCard from \"./HeroCard\";\n\n//import things for css\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction TeamMemberList({ heroArray, onDisselectBtnClickInTeamPage }) {\n  //material ui thing\n  const classes = useStyles();\n\n  //props to pass down for css purpose\n  const xsNum = 6;\n  const smNum = 3;\n  const seletedMemberCard = \"seletedMemberCard\";\n\n   //props that pass that to hide the button\n   const disselectBtnId = \"disselectBtnId\"\n\n  return (\n    <div className=\"flex-container\">\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            {heroArray.map(hero => <HeroCard \n                                    key={hero.id} \n                                    hero={hero} \n                                    heroImage={hero.image}\n                                    heroId={hero.heroId}\n                                    xsNum={xsNum}\n                                    smNum={smNum}\n                                    seletedMemberCard={seletedMemberCard}\n                                    onDisselectBtnClick={onDisselectBtnClickInTeamPage}\n                                    link={`team/${hero.id}`}\n                                    disselectBtnId={disselectBtnId}\n                                    />)}\n          </Grid>\n        </div>\n    </div>\n  );\n}\n\nexport default TeamMemberList;","import React,{ useEffect,useState } from \"react\";\nimport RecruitDetails from \"./RecruitDetails\";\nimport TeamMemberList from \"./TeamMemberList\";\n\n\n\nfunction Team({/*setTeamArray, teamArray, onDisselectBtnClickInTeamPage,*/ currentTeam }) {\n  console.log(currentTeam)\n  const [teamArray, setTeamArray] = useState([])\n\n\n  const onDisselectBtnClickInTeamPage = (disselectedHero) => {\n    console.log(disselectedHero.id)\n    //Delete from database \n    fetch(`http://localhost:3000/teamMember/${disselectedHero.id}`, {\n      method: 'DELETE',\n      })\n      .catch(error => console.error('Error:', error))\n    \n    //Delete from teamArray\n    setTeamArray(teamArray.filter(teamMember=> teamMember.name !== disselectedHero.name))\n  }\n\n  useEffect(()=>{\n    fetch(\"http://localhost:3000/teamMember\")\n\t  .then(res => res.json())\n    .then(data => setTeamArray(data.filter(teamMember=> teamMember.userId === currentTeam)) )\n    .catch(error => console.error('Error:', error))\n  },[currentTeam])\n\n\n  return (\n    <div className=\"teamPage\">\n      \n        <TeamMemberList heroArray={teamArray}\n                        onDisselectBtnClickInTeamPage={onDisselectBtnClickInTeamPage}\n                        />\n\n    </div>\n  );\n}\n\nexport default Team;","//Have to run the 2 command below to make the page show poperly on your browser \n//npm install @material-ui/core \n//npm install @material-ui/icons\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Popover from '@material-ui/core/Popover'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  typography: {\n    padding: theme.spacing(2),\n    color: \"black\"\n    },\n}));\n\nfunction SignIn({ onExistingTeamLogIn }) {\n  const classes = useStyles();\n\n  const [enteredTeam, setEnteredTeam] = useState(\"\")\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory()\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  const verifyTeam = (e, users, addedTeam) => {\n    let allUsers = users.map(team => team.teamName)\n    let currentUser = addedTeam.teamName\n    if (allUsers.includes(currentUser)) {\n      onExistingTeamLogIn(currentUser)\n      history.push(\"/\")\n    } else {\n      setAnchorEl(e.target);\n    }\n  } \n\n  const newTeamSubmit = (e) => {\n    e.preventDefault();\n    const addedTeam = {\n      teamName: enteredTeam\n    }\n    fetch('http://localhost:3000/users')\n    .then(response => response.json())\n    .then(users => verifyTeam(e, users, addedTeam))  \n    // onNewTeamSubmit(addedTeam)\n    // history.push(\"/\")\n  }\n\n  const handleTeamName = (e) => {\n    setEnteredTeam(e.target.value)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n    <Container component=\"main\" maxWidth=\"xs\" className=\"signInPage\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h3\" className=\"black-font\" >\n          Sign in\n        </Typography>\n        <form onSubmit={newTeamSubmit} className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Enter your existing team name\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleTeamName}\n            value={enteredTeam}\n          />\n          {/* <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Go To My Team\n          </Button>\n          <Grid container>\n            {/* <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid> */}\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have a team? Create one!\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n    <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>{enteredTeam} does not exist. Please try again.</Typography>\n      </Popover>\n    </>\n  );\n}\n\nexport default SignIn;\n","//Have to run the 2 command below to make the page show poperly on your browser \n//npm install @material-ui/core \n//npm install @material-ui/icons\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Popover from '@material-ui/core/Popover'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  typography: {\n    padding: theme.spacing(2),\n    color: \"black\"\n  },\n  \n}));\n\nfunction SignUp({ onNewTeamSubmit }) {\n  const classes = useStyles();\n  const [newTeam, setNewTeam] = useState(\"\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory();\n\n  const handleNewTeam = (e) => {\n    setNewTeam(e.target.value)\n  }\n\n  const [allUsers, setAllUsers] = useState([])\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  useEffect(() => {\n  fetch('http://localhost:3000/users')\n  .then(res => res.json())\n  .then(user => setAllUsers(user))\n  }, [])\n\n  const newTeamSubmit = (e) => {\n    e.preventDefault();\n    const addedTeam = {\n      teamName: newTeam\n    }\n    const userMap = allUsers.map(team => team.teamName)\n    if (userMap.includes(addedTeam.teamName)) {\n      setAnchorEl(e.target);\n    } else {\n      fetch('http://localhost:3000/users', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(addedTeam)\n    })\n    onNewTeamSubmit(addedTeam)\n    history.push(\"/\")\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n    <Container component=\"main\" maxWidth=\"xs\" className=\"signUpPage\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h3\" className=\"black-font\">\n          Sign up\n        </Typography>\n        <form onSubmit={newTeamSubmit} className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"uName\"\n                name=\"userName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"userName\"\n                label=\"Create a name for your team here\"\n                autoFocus\n                onChange={handleNewTeam}\n              />{newTeam}\n            </Grid>\n            {/* <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Create Team!\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have a team? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n    <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>{newTeam} has already been selected. Please choose another name.</Typography>\n      </Popover>\n    </>\n  );\n}\n\nexport default SignUp;","import React from \"react\";\n\n\nfunction NewHeroForm() {\n\n  return (\n    <>\n    < form>\n    \n    </form>\n    </>\n  );\n}\n\nexport default NewHeroForm;","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from 'react-router-dom'\n\nfunction TeamDetails({ onHeroSelection }) {\n    const [hero, setHero] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    const { id } = useParams()\n\n    const history = useHistory();\n    \n    function handleBack() {\n        history.goBack()\n    }\n\n    useEffect(() => {\n      fetch(`http://localhost:3000/teamMember/${id}`)\n      .then((r) => r.json())\n      .then((hero) => {\n        setHero(hero);\n        setIsLoaded(true);\n      });\n  }, [id]);\n\n  if (!isLoaded) return <h2>Loading...</h2>;\n\n    const deselectClickHandler = () => {\n        //delete request \n        fetch(`http://localhost:3000/teamMember/${id}`, {\n            method: 'DELETE',\n            })\n        .catch(error => console.error('Error:', error))\n          \n        //push to Team page\n        history.push(\"/team\")\n    }\n\nconsole.log(hero)\n\n  return (\n    <div className=\"recruitDetailsContainer\">\n\n      <div className=\"detail-left-container\">\n        <img className=\"detail-img\" src={hero.image} />\n\n        <div className=\"btngroup\">\n          <button className=\"detail-btn\" onClick={handleBack}> Go Back</button>\n          <button className=\"detail-btn\" onClick={()=>{deselectClickHandler()}}>Remove from team </button>\n        </div>\n\n      </div>\n\n      <div className=\"detail-right-container\">\n        <h2 className=\"detail-name\">{hero.name}</h2>\n        <h3 className=\"detail-description\" >Description:</h3>\n        { hero.description ===\"\" ?\n        <p> Sorry, it doesn't seem like Marvel cares about this super hero enough to give him/her a description 😔 </p>\n        :\n        <p> {hero.description}</p>\n        }\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default TeamDetails;","import React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\"\nimport Home from \"./Home\"\nimport Team from \"./Team\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport RecruitDetails from \"./RecruitDetails\"\nimport NewHeroForm from \"./NewHeroForm\"\nimport TeamDetails from \"./TeamDetails\"\n\n/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */\n// Tip: don't forget to run npm install react-router dom !\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  const [heroArray, setHeroArray] = useState([])\n  const [heroSelectionArray, setHeroSelectionArray] = useState([])\n  // const [teamArray, setTeamArray] = useState([])\n  const [isLoggedIn, setLogIn] = useState(false)\n  const [currentTeam, setCurrentTeam] = useState(null)\n  // const [teamMemberArrayfromDB, setTeamMemberArrayfromDB] = ([])\n  \n  //callback function pass down to RecruitDetail page for the Enlist Btn\n  let flag = true;\n  const onHeroSelection = (selectedHero) => {\n      if (heroSelectionArray.length === 0 ) {\n        setHeroSelectionArray([...heroSelectionArray, selectedHero])\n      } else { heroSelectionArray.map(hero => {\n        // console.log(hero.id, selectedHero.id)\n                if (hero.id ===selectedHero.id) {\n                    flag = false; \n          }\n    })\n    if (flag){\n      setHeroSelectionArray([...heroSelectionArray, selectedHero])\n    }\n  \n  }\n    //add hero to the heroSelectionArray \n    // if (selectedHero.id)\n    \n    //make this herocard disappear from RecruitList\n    const heroArrayAfterSelect = heroArray.filter(hero=>hero.id !== selectedHero.id)\n    setHeroArray(heroArrayAfterSelect)\n  }\n\n  //callback fn pass down to HeroSelection.js for AddToTeamBtn\n  const onAddToTeamBtnClick = (heroSelectionArray) => {\n    console.log(heroSelectionArray)\n    \n    heroSelectionArray.map(hero => {\n      fetch(\"http://localhost:3000/teamMember\", {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentTeam,\n          heroId: hero.id,\n          name: hero.name,\n          image: `${hero.thumbnail.path}.${hero.thumbnail.extension}`,\n          description:hero.description\n          })\n      })\n      .catch(error => console.error('Error:', error))\n    })    \n\n    //clear out heroSelectionArray \n    setHeroSelectionArray([]);\n  }\n\n  //handle disselectBtn click on HeroSelection\n  const onDisselectBtnClickInSelection = (disselectedHero) => {\n    //change the heroSelectionArray (disappear on the selection section)\n    setHeroSelectionArray(heroSelectionArray.filter(selectedHero => selectedHero.name !== disselectedHero.name))\n    \n    //change the heroArray (display on the recruit list section)\n    setHeroArray([...heroArray, disselectedHero])\n  }\n\n  \n\n\n  const handleLogIn = (signedInTeam) => {\n    setLogIn(true)\n    setCurrentTeam(signedInTeam)\n  }\n\n  useEffect(() => {\n    // fetch('http://localhost:3000/heroes')\n    fetch('https://gateway.marvel.com:443/v1/public/characters?apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n    .then(response => response.json())\n    .then(heroData => {\n      let heroes = heroData.data.results.map(hero => hero)\n      setHeroArray(heroes)\n    })\n    // .then(heroData => setHeroArray(heroData.data.map(results => results.hero)))\n    // .then(heroData => heroData.data.results.map(hero => console.log(hero)))\n    // .then(heroData => setHeroArray(heroData))\n  }, [])\n\n  console.log(heroArray)\n  // useEffect(() => {\n  //   fetch('http://localhost:3000/heroes')\n  //   // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n  //   .then(response => response.json())\n  //   // .then(heroData => console.log(heroData))\n  //   .then(heroData => setHeroArray(heroData))\n  // }, [])\n\n  // console.log(heroArray)\n  return (\n    <div >\n      <Header isLoggedIn={isLoggedIn} setLogIn={setLogIn} />\n      <Switch>\n\n        <Route exact path=\"/\" component={() => <Home heroArray={heroArray} \n                                                     heroSelectionArray={heroSelectionArray} \n                                                     onAddToTeamBtnClick={onAddToTeamBtnClick}\n                                                     onDisselectBtnClickInSelection={onDisselectBtnClickInSelection}\n\n                                                     /> }  />\n        <Route path=\"/recruit/:id\" component={() => <RecruitDetails onHeroSelection={onHeroSelection} /> }  />\n        <Route path=\"/team/:id\" component={() => <TeamDetails onHeroSelection={onHeroSelection} /> }  />\n        <Route exact path=\"/team\" component={() => <Team currentTeam={currentTeam}\n                                                      /> }  />\n        <Route exact path=\"/addhero\" component={() => <NewHeroForm /> }  />\n        {/* <Route path=\"/team/:id\" component={() => <RecruitDetails /> }  /> */}\n        <Route exact path=\"/signin\" component={() => <SignIn onExistingTeamLogIn={handleLogIn} /> }  />\n        <Route exact path=\"/signup\" component={() => <SignUp onNewTeamSubmit={handleLogIn} /> }  />\n      </Switch>\n\n\n      {/* <Home heroArray={heroArray} />\n\n      <Team />\n\n      <SignIn />\n\n      <SignUp /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n\n//Import the Router property from react-router-dom\n// Remember to run npm install react-router-dom first!\nimport {BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  // Maybe let's look into what StrictMode\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"ast":null,"code":"import _toConsumableArray from\"/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import'../assets/App.css';import Header from\"./Header\";import Home from\"./Home\";import Team from\"./Team\";import SignIn from\"./SignIn\";import SignUp from\"./SignUp\";import RecruitDetails from\"./RecruitDetails\";import NewHeroForm from\"./NewHeroForm\";import TeamDetails from\"./TeamDetails\";/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */ // Tip: don't forget to run npm install react-router dom !\nimport{Route,Switch}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),heroArray=_useState2[0],setHeroArray=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),heroSelectionArray=_useState4[0],setHeroSelectionArray=_useState4[1];// const [teamArray, setTeamArray] = useState([])\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoggedIn=_useState6[0],setLogIn=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),currentTeam=_useState8[0],setCurrentTeam=_useState8[1];// const [teamMemberArrayfromDB, setTeamMemberArrayfromDB] = ([])\n//callback function pass down to RecruitDetail page for the Enlist Btn\nvar flag=true;var onHeroSelection=function onHeroSelection(selectedHero){if(heroSelectionArray.length===0){setHeroSelectionArray([].concat(_toConsumableArray(heroSelectionArray),[selectedHero]));}else{heroSelectionArray.map(function(hero){// console.log(hero.id, selectedHero.id)\nif(hero.id===selectedHero.id){flag=false;}});if(flag){setHeroSelectionArray([].concat(_toConsumableArray(heroSelectionArray),[selectedHero]));}}//add hero to the heroSelectionArray \n// if (selectedHero.id)\n//make this herocard disappear from RecruitList\nvar heroArrayAfterSelect=heroArray.filter(function(hero){return hero.id!==selectedHero.id;});setHeroArray(heroArrayAfterSelect);};//callback fn pass down to HeroSelection.js for AddToTeamBtn\nvar onAddToTeamBtnClick=function onAddToTeamBtnClick(heroSelectionArray){console.log(heroSelectionArray);heroSelectionArray.map(function(hero){fetch(\"http://localhost:3000/teamMember\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId:currentTeam,heroId:hero.id,name:hero.name,image:\"\".concat(hero.thumbnail.path,\".\").concat(hero.thumbnail.extension),description:hero.description})}).catch(function(error){return console.error('Error:',error);});});//clear out heroSelectionArray \nsetHeroSelectionArray([]);};//handle disselectBtn click on HeroSelection\nvar onDisselectBtnClickInSelection=function onDisselectBtnClickInSelection(disselectedHero){//change the heroSelectionArray (disappear on the selection section)\nsetHeroSelectionArray(heroSelectionArray.filter(function(selectedHero){return selectedHero.name!==disselectedHero.name;}));//change the heroArray (display on the recruit list section)\nsetHeroArray([].concat(_toConsumableArray(heroArray),[disselectedHero]));};var handleLogIn=function handleLogIn(signedInTeam){setLogIn(true);setCurrentTeam(signedInTeam);};useEffect(function(){// fetch('http://localhost:3000/heroes')\nfetch('https://gateway.marvel.com:443/v1/public/characters?apikey=c8d257c5c8de3331d6de741ea71c6a3a').then(function(response){return response.json();}).then(function(heroData){var heroes=heroData.data.results.map(function(hero){return hero;});setHeroArray(heroes);});// .then(heroData => setHeroArray(heroData.data.map(results => results.hero)))\n// .then(heroData => heroData.data.results.map(hero => console.log(hero)))\n// .then(heroData => setHeroArray(heroData))\n},[]);console.log(heroArray);// useEffect(() => {\n//   fetch('http://localhost:3000/heroes')\n//   // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n//   .then(response => response.json())\n//   // .then(heroData => console.log(heroData))\n//   .then(heroData => setHeroArray(heroData))\n// }, [])\n// console.log(heroArray)\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{isLoggedIn:isLoggedIn,setLogIn:setLogIn}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:function component(){return/*#__PURE__*/_jsx(Home,{heroArray:heroArray,heroSelectionArray:heroSelectionArray,onAddToTeamBtnClick:onAddToTeamBtnClick,onDisselectBtnClickInSelection:onDisselectBtnClickInSelection});}}),/*#__PURE__*/_jsx(Route,{path:\"/recruit/:id\",component:function component(){return/*#__PURE__*/_jsx(RecruitDetails,{onHeroSelection:onHeroSelection});}}),/*#__PURE__*/_jsx(Route,{path:\"/team/:id\",component:function component(){return/*#__PURE__*/_jsx(TeamDetails,{onHeroSelection:onHeroSelection});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/team\",component:function component(){return/*#__PURE__*/_jsx(Team,{currentTeam:currentTeam});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/addhero\",component:function component(){return/*#__PURE__*/_jsx(NewHeroForm,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signin\",component:function component(){return/*#__PURE__*/_jsx(SignIn,{onExistingTeamLogIn:handleLogIn});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",component:function component(){return/*#__PURE__*/_jsx(SignUp,{onNewTeamSubmit:handleLogIn});}})]})]});}export default App;","map":{"version":3,"sources":["/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/src/components/App.js"],"names":["React","useEffect","useState","Header","Home","Team","SignIn","SignUp","RecruitDetails","NewHeroForm","TeamDetails","Route","Switch","App","heroArray","setHeroArray","heroSelectionArray","setHeroSelectionArray","isLoggedIn","setLogIn","currentTeam","setCurrentTeam","flag","onHeroSelection","selectedHero","length","map","hero","id","heroArrayAfterSelect","filter","onAddToTeamBtnClick","console","log","fetch","method","headers","body","JSON","stringify","userId","heroId","name","image","thumbnail","path","extension","description","catch","error","onDisselectBtnClickInSelection","disselectedHero","handleLogIn","signedInTeam","then","response","json","heroData","heroes","data","results"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\"\nimport Home from \"./Home\"\nimport Team from \"./Team\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport RecruitDetails from \"./RecruitDetails\"\nimport NewHeroForm from \"./NewHeroForm\"\nimport TeamDetails from \"./TeamDetails\"\n\n/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */\n// Tip: don't forget to run npm install react-router dom !\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  const [heroArray, setHeroArray] = useState([])\n  const [heroSelectionArray, setHeroSelectionArray] = useState([])\n  // const [teamArray, setTeamArray] = useState([])\n  const [isLoggedIn, setLogIn] = useState(false)\n  const [currentTeam, setCurrentTeam] = useState(null)\n  // const [teamMemberArrayfromDB, setTeamMemberArrayfromDB] = ([])\n  \n  //callback function pass down to RecruitDetail page for the Enlist Btn\n  let flag = true;\n  const onHeroSelection = (selectedHero) => {\n      if (heroSelectionArray.length === 0 ) {\n        setHeroSelectionArray([...heroSelectionArray, selectedHero])\n      } else { heroSelectionArray.map(hero => {\n        // console.log(hero.id, selectedHero.id)\n                if (hero.id ===selectedHero.id) {\n                    flag = false; \n          }\n    })\n    if (flag){\n      setHeroSelectionArray([...heroSelectionArray, selectedHero])\n    }\n  \n  }\n    //add hero to the heroSelectionArray \n    // if (selectedHero.id)\n    \n    //make this herocard disappear from RecruitList\n    const heroArrayAfterSelect = heroArray.filter(hero=>hero.id !== selectedHero.id)\n    setHeroArray(heroArrayAfterSelect)\n  }\n\n  //callback fn pass down to HeroSelection.js for AddToTeamBtn\n  const onAddToTeamBtnClick = (heroSelectionArray) => {\n    console.log(heroSelectionArray)\n    \n    heroSelectionArray.map(hero => {\n      fetch(\"http://localhost:3000/teamMember\", {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentTeam,\n          heroId: hero.id,\n          name: hero.name,\n          image: `${hero.thumbnail.path}.${hero.thumbnail.extension}`,\n          description:hero.description\n          })\n      })\n      .catch(error => console.error('Error:', error))\n    })    \n\n    //clear out heroSelectionArray \n    setHeroSelectionArray([]);\n  }\n\n  //handle disselectBtn click on HeroSelection\n  const onDisselectBtnClickInSelection = (disselectedHero) => {\n    //change the heroSelectionArray (disappear on the selection section)\n    setHeroSelectionArray(heroSelectionArray.filter(selectedHero => selectedHero.name !== disselectedHero.name))\n    \n    //change the heroArray (display on the recruit list section)\n    setHeroArray([...heroArray, disselectedHero])\n  }\n\n  \n\n\n  const handleLogIn = (signedInTeam) => {\n    setLogIn(true)\n    setCurrentTeam(signedInTeam)\n  }\n\n  useEffect(() => {\n    // fetch('http://localhost:3000/heroes')\n    fetch('https://gateway.marvel.com:443/v1/public/characters?apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n    .then(response => response.json())\n    .then(heroData => {\n      let heroes = heroData.data.results.map(hero => hero)\n      setHeroArray(heroes)\n    })\n    // .then(heroData => setHeroArray(heroData.data.map(results => results.hero)))\n    // .then(heroData => heroData.data.results.map(hero => console.log(hero)))\n    // .then(heroData => setHeroArray(heroData))\n  }, [])\n\n  console.log(heroArray)\n  // useEffect(() => {\n  //   fetch('http://localhost:3000/heroes')\n  //   // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n  //   .then(response => response.json())\n  //   // .then(heroData => console.log(heroData))\n  //   .then(heroData => setHeroArray(heroData))\n  // }, [])\n\n  // console.log(heroArray)\n  return (\n    <div >\n      <Header isLoggedIn={isLoggedIn} setLogIn={setLogIn} />\n      <Switch>\n\n        <Route exact path=\"/\" component={() => <Home heroArray={heroArray} \n                                                     heroSelectionArray={heroSelectionArray} \n                                                     onAddToTeamBtnClick={onAddToTeamBtnClick}\n                                                     onDisselectBtnClickInSelection={onDisselectBtnClickInSelection}\n\n                                                     /> }  />\n        <Route path=\"/recruit/:id\" component={() => <RecruitDetails onHeroSelection={onHeroSelection} /> }  />\n        <Route path=\"/team/:id\" component={() => <TeamDetails onHeroSelection={onHeroSelection} /> }  />\n        <Route exact path=\"/team\" component={() => <Team currentTeam={currentTeam}\n                                                      /> }  />\n        <Route exact path=\"/addhero\" component={() => <NewHeroForm /> }  />\n        {/* <Route path=\"/team/:id\" component={() => <RecruitDetails /> }  /> */}\n        <Route exact path=\"/signin\" component={() => <SignIn onExistingTeamLogIn={handleLogIn} /> }  />\n        <Route exact path=\"/signup\" component={() => <SignUp onNewTeamSubmit={handleLogIn} /> }  />\n      </Switch>\n\n\n      {/* <Home heroArray={heroArray} />\n\n      <Team />\n\n      <SignIn />\n\n      <SignUp /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
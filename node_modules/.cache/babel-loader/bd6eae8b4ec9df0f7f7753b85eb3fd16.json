{"ast":null,"code":"var _jsxFileName = \"/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Team from \"./Team\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport RecruitDetails from \"./RecruitDetails\";\n/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */\n// Tip: don't forget to run npm install react-router dom !\n\nimport { Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [heroArray, setHeroArray] = useState([]);\n  const [heroSelectionArray, setHeroSelectionArray] = useState([]); //callback function pass down to RecruitDetail page for the Enlist Btn\n\n  const onHeroSelection = selectedHero => {\n    //add hero to the heroSelectionArray \n    setHeroSelectionArray([...heroSelectionArray, selectedHero]); //make this herocard disappear from RecruitList\n\n    const heroArrayAfterSelect = heroArray.filter(hero => hero.id !== selectedHero.id);\n    setHeroArray(heroArrayAfterSelect);\n  }; //callback fn pass down to HeroSelection.js for AddToTeamBtn\n\n\n  const onAddToTeamBtnClick = heroSelectionArray => {\n    console.log(heroSelectionArray);\n    const aaa = [{\n      x: 1\n    }, {\n      x: 2\n    }];\n    console.log(aaa[0].x); //iterate thru the array and POST obj\n\n    const herosNeedToPOST = heroSelectionArray.filter(heroSelected => {\n      if (aaa.map(a => a.x !== heroSelected.id)) return heroSelected;else {\n        console.log(\"alreadySelected\");\n      }\n    });\n    console.log(herosNeedToPOST); // heroSelectionArray.map(selectedHero=>{\n    //   fetch(\"http://localhost:3000/teamMember\", {\n    //     method: 'POST',\n    //     headers:{\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body:JSON.stringify({\n    //       userId:1,\n    //       heroId:selectedHero.id\n    //     })\n    //   })\n    //   .then(res => res.json())\n    //   .then(data => console.log(data) )\n    //   .catch(error => console.error('Error:', error))\n    // })\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:3000/heroes') // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n    .then(response => response.json()) // .then(heroData => console.log(heroData))\n    .then(heroData => setHeroArray(heroData));\n  }, []); // console.log(heroArray)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Home, {\n          heroArray: heroArray,\n          heroSelectionArray: heroSelectionArray,\n          onAddToTeamBtnClick: onAddToTeamBtnClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recruit/:id\",\n        component: () => /*#__PURE__*/_jsxDEV(RecruitDetails, {\n          onHeroSelection: onHeroSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/team\",\n        component: () => /*#__PURE__*/_jsxDEV(Team, {\n          heroArray: heroArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/team/:id\",\n        component: () => /*#__PURE__*/_jsxDEV(RecruitDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        component: () => /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        component: () => /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QCz2b6Mz2qAyEqyp7DcVkdMtrHs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/src/components/App.js"],"names":["React","useEffect","useState","Header","Home","Team","SignIn","SignUp","RecruitDetails","Route","Switch","App","heroArray","setHeroArray","heroSelectionArray","setHeroSelectionArray","onHeroSelection","selectedHero","heroArrayAfterSelect","filter","hero","id","onAddToTeamBtnClick","console","log","aaa","x","herosNeedToPOST","heroSelected","map","a","fetch","then","response","json","heroData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\"\nimport Home from \"./Home\"\nimport Team from \"./Team\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport RecruitDetails from \"./RecruitDetails\"\n\n/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */\n// Tip: don't forget to run npm install react-router dom !\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  const [heroArray, setHeroArray] = useState([])\n  const [heroSelectionArray, setHeroSelectionArray] = useState([])\n\n  //callback function pass down to RecruitDetail page for the Enlist Btn\n  const onHeroSelection = (selectedHero) => {\n    //add hero to the heroSelectionArray \n    setHeroSelectionArray([...heroSelectionArray, selectedHero])\n    //make this herocard disappear from RecruitList\n    const heroArrayAfterSelect = heroArray.filter(hero=>hero.id !== selectedHero.id)\n    setHeroArray(heroArrayAfterSelect)\n  }\n\n  //callback fn pass down to HeroSelection.js for AddToTeamBtn\n  const onAddToTeamBtnClick = (heroSelectionArray) => {\n    console.log(heroSelectionArray)\n   \n    const aaa = [{x:1},{x:2}]\n    console.log(aaa[0].x)\n    //iterate thru the array and POST obj\n    const herosNeedToPOST = heroSelectionArray.filter(heroSelected=> {\n      if(aaa.map(a=>a.x !== heroSelected.id)) \n        return heroSelected\n      else {\n        console.log(\"alreadySelected\")\n      }\n    })\n    console.log(herosNeedToPOST)\n    // heroSelectionArray.map(selectedHero=>{\n    //   fetch(\"http://localhost:3000/teamMember\", {\n    //     method: 'POST',\n    //     headers:{\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body:JSON.stringify({\n    //       userId:1,\n    //       heroId:selectedHero.id\n    //     })\n    //   })\n    //   .then(res => res.json())\n    //   .then(data => console.log(data) )\n    //   .catch(error => console.error('Error:', error))\n    // })\n  }\n\n\n  useEffect(() => {\n    fetch('http://localhost:3000/heroes')\n    // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n    .then(response => response.json())\n    // .then(heroData => console.log(heroData))\n    .then(heroData => setHeroArray(heroData))\n  }, [])\n\n  // console.log(heroArray)\n  return (\n    <div >\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={() => <Home heroArray={heroArray} \n                                                     heroSelectionArray={heroSelectionArray} \n                                                     onAddToTeamBtnClick={onAddToTeamBtnClick}\n                                                     \n                                                     /> }  />\n        <Route path=\"/recruit/:id\" component={() => <RecruitDetails onHeroSelection={onHeroSelection} /> }  />\n        <Route exact path=\"/team\" component={() => <Team heroArray={heroArray} /> }  />\n        <Route path=\"/team/:id\" component={() => <RecruitDetails /> }  />\n        <Route exact path=\"/signin\" component={() => <SignIn /> }  />\n        <Route exact path=\"/signup\" component={() => <SignUp /> }  />\n      </Switch>\n\n\n      {/* <Home heroArray={heroArray} />\n\n      <Team />\n\n      <SignIn />\n\n      <SignUp /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
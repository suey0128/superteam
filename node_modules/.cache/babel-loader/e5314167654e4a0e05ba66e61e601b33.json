{"ast":null,"code":"var _jsxFileName = \"/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/src/components/HeroSelection.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport HeroCard from \"./HeroCard\";\nimport { useHistory } from \"react-router-dom\"; //import things for css\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nfunction HeroSelection({\n  heroSelectionArray,\n  onAddToTeamBtnClick,\n  onDisselectBtnClickInSelection,\n  currentTeam,\n  setHeroSelectionArray\n}) {\n  _s();\n\n  //material ui thing\n  const classes = useStyles(); //props to pass down for css purpose\n\n  const xsNum = 6;\n  const smNum = 3;\n  const seletedMemberCard = \"seletedMemberCard\"; //useHistory for the AddToTeamBtn\n\n  const history = useHistory(); //Add To Team Btn handler\n\n  const handleAddToTeamBtn = () => {\n    // //pass heroSelectionArray up the App.js for 1.POST to the database 2.filter out the heroArray when load \n    // onAddToTeamBtnClick(heroSelectionArray)\n    // //push to team page\n    // history.push(\"/team\")\n    // heroSelectionArray.map(hero => {\n    //   fetch(\"http://localhost:3000/teamMember\", {\n    //     method: 'POST',\n    //     headers: { \n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //       userId: currentTeam,\n    //       heroId: hero.id,\n    //       name: hero.name,\n    //       image: `${hero.thumbnail.path}.${hero.thumbnail.extension}`,\n    //       description:hero.description\n    //       })\n    //   })\n    //   .then(history.push(\"/team\"))\n    //   .catch(error => console.error('Error:', error))\n    // }) \n    // //clear out heroSelectionArray \n    // setHeroSelectionArray([]);\n    let i = 0;\n\n    while (i <= self.heroSelectionArray.length) {\n      if (i < self.heroSelectionArray.length) {\n        fetch(\"http://localhost:3000/teamMember\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: currentTeam,\n            heroId: heroSelectionArray[i].id,\n            name: heroSelectionArray[i].name,\n            image: `${heroSelectionArray[i].thumbnail.path}.${heroSelectionArray[i].thumbnail.extension}`,\n            description: heroSelectionArray[i].description\n          })\n        });\n        i++;\n      } else {\n        history.push(\"/team\");\n      }\n    }\n\n    setHeroSelectionArray([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currentTeam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: heroSelectionArray.map(hero => /*#__PURE__*/_jsxDEV(HeroCard, {\n          hero: hero,\n          heroImage: hero.thumbnail.path + \".\" + hero.thumbnail.extension,\n          heroId: hero.id // link={`/recruit/${hero.id}`}\n          ,\n          linke: \"\",\n          hoverEffectDisabledId: \"hoverEffectDisabledId\",\n          xsNum: xsNum,\n          smNum: smNum,\n          seletedMemberCard: seletedMemberCard,\n          onDisselectBtnClick: onDisselectBtnClickInSelection\n        }, hero.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-to-team-btn\",\n      onClick: () => {\n        handleAddToTeamBtn();\n      },\n      children: \"Add To Your Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeroSelection, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = HeroSelection;\nexport default HeroSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSelection\");","map":{"version":3,"sources":["/Users/Sky/Development/FlatironBootCamp/p2/Project/phase-2-project-hero-team-builder/src/components/HeroSelection.js"],"names":["React","HeroCard","useHistory","makeStyles","Grid","useStyles","theme","root","flexGrow","HeroSelection","heroSelectionArray","onAddToTeamBtnClick","onDisselectBtnClickInSelection","currentTeam","setHeroSelectionArray","classes","xsNum","smNum","seletedMemberCard","history","handleAddToTeamBtn","i","self","length","fetch","method","headers","body","JSON","stringify","userId","heroId","id","name","image","thumbnail","path","extension","description","push","map","hero"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport HeroCard from \"./HeroCard\";\nimport { useHistory } from \"react-router-dom\"\n\n//import things for css\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction HeroSelection({ heroSelectionArray, onAddToTeamBtnClick, onDisselectBtnClickInSelection, currentTeam, setHeroSelectionArray }) {\n  //material ui thing\n  const classes = useStyles();\n\n  //props to pass down for css purpose\n  const xsNum = 6;\n  const smNum = 3;\n  const seletedMemberCard = \"seletedMemberCard\";\n\n  //useHistory for the AddToTeamBtn\n  const history = useHistory();\n\n  //Add To Team Btn handler\n  const handleAddToTeamBtn = () => {\n    \n    // //pass heroSelectionArray up the App.js for 1.POST to the database 2.filter out the heroArray when load \n    // onAddToTeamBtnClick(heroSelectionArray)\n    // //push to team page\n    // history.push(\"/team\")\n    \n\n    // heroSelectionArray.map(hero => {\n    //   fetch(\"http://localhost:3000/teamMember\", {\n    //     method: 'POST',\n    //     headers: { \n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //       userId: currentTeam,\n    //       heroId: hero.id,\n    //       name: hero.name,\n    //       image: `${hero.thumbnail.path}.${hero.thumbnail.extension}`,\n    //       description:hero.description\n    //       })\n    //   })\n    //   .then(history.push(\"/team\"))\n    //   .catch(error => console.error('Error:', error))\n    // }) \n\n    // //clear out heroSelectionArray \n    // setHeroSelectionArray([]);\n\n    let i = 0;\n    while (i <= self.heroSelectionArray.length) {\n      if (i < self.heroSelectionArray.length) {\n        fetch(\"http://localhost:3000/teamMember\", {\n          method: 'POST',\n          headers: { \n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: currentTeam,\n            heroId: heroSelectionArray[i].id,\n            name: heroSelectionArray[i].name,\n            image: `${heroSelectionArray[i].thumbnail.path}.${heroSelectionArray[i].thumbnail.extension}`,\n            description:heroSelectionArray[i].description\n            })\n        })\n        i++;\n      } else {history.push(\"/team\")}\n    }\n\n    setHeroSelectionArray([]);\n\n  }\n\n\n    return (\n      \n   \n        <div className=\"flex-container\">\n          <h1>{currentTeam}</h1>\n          <br></br>\n            <div className={classes.root}>\n              <Grid container spacing={3}>\n                {heroSelectionArray.map(hero => <HeroCard \n                                                    key={hero.id} \n                                                    hero={hero} \n                                                    heroImage={hero.thumbnail.path + \".\" + hero.thumbnail.extension}\n                                                    heroId={hero.id}\n                                                    // link={`/recruit/${hero.id}`}\n                                                    linke={\"\"}\n                                                    hoverEffectDisabledId={\"hoverEffectDisabledId\"}\n                                                    xsNum={xsNum}\n                                                    smNum={smNum}\n                                                    seletedMemberCard={seletedMemberCard}\n                                                    onDisselectBtnClick={onDisselectBtnClickInSelection}\n                                                    />)}\n              </Grid>\n            </div>    \n            <button className=\"add-to-team-btn\" onClick={()=>{handleAddToTeamBtn()}}>Add To Your Team</button>\n        </div>\n  );\n}\n\nexport default HeroSelection;\n"]},"metadata":{},"sourceType":"module"}